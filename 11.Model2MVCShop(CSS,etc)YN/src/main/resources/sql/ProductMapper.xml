<?xml version="1.0" encoding="UTF-8" ?>

<!DOCTYPE mapper
		PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
		"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
	
<mapper namespace="ProductMapper">
<!-- Purpose of resultMap is mapping resultSet of SQL -->
  	<resultMap id ="productSelectMap" type="product">
   		<result property="fileName" 	 column="IMAGE_FILE" 					jdbcType="VARCHAR"/>
  		<result property="manuDate" column="MANUFACTURE_DAY" 	jdbcType="VARCHAR"/>
  		<result property="price" 			 column="PRICE" 								jdbcType="NUMERIC"/>
  		<result property="prodDetail" column="PROD_DETAIL"					 jdbcType="VARCHAR"/>
  		<result property="prodName" column="PROD_NAME"					 jdbcType="VARCHAR"/>
  		<result property="prodNo" 		 column="PROD_NO" 						jdbcType="NUMERIC"/>
  		<result property="regDate"		  column="REG_DATE"						 jdbcType="DATE"/>
  		<result property="proTranCode" column="TRAN_STATUS_CODE" jdbcType="CHAR"/>
  	</resultMap>	
  
	<insert id="addProduct" parameterType="product">
		INSERT
		INTO product (prod_no, prod_name, prod_detail, manufacture_day, price, image_file, reg_date)
		VALUES(		seq_product_prod_no.nextval,
							#{prodName},
							#{prodDetail,jdbcType=VARCHAR},
							#{manuDate,jdbcType=VARCHAR},
							#{price,jdbcType=NUMERIC}, 
							#{fileName,jdbcType=VARCHAR},
	<!--					<if test="grade==0"> null</if>
							<if test="grade!=0">#{grade}</if>,  -->	
							sysdate )
	</insert>

  	<select id = "getProduct" parameterType="string" resultMap="productSelectMap">
  		SELECT
  		prod_no, prod_name, prod_detail, manufacture_day, price, image_file, reg_date
  		FROM product
  		WHERE	prod_no = #{value}
  	</select>
  	
  	<update id="updateProduct" parameterType="product" >
  		UPDATE product
  		<set>
    		<if test="prodName !=null">prod_name			  						=#{prodName,jdbcType=VARCHAR},</if>
  			<if test="prodDetail !=null">prod_detail			 						 =#{prodDetail,jdbcType=VARCHAR},</if>
  			<if test="manuDate !=null"> manufacture_day						=#{manuDate,jdbcType=VARCHAR},</if> 
  			<if test="price !=null">			price												=#{price,jdbcType=NUMERIC},		</if> 
  			<if test="fileName != null"> image_file		=#{fileName,jdbcType=VARCHAR} </if> 					
  		</set>
		WHERE prod_no = #{prodNo}  		
  	</update>
  	
  	<delete id="removeProduct" parameterType="java.lang.String">
  		DELETE
  	 	FROM product
  	 	WHERE prod_no = #{value}
  	</delete>
  	

  	<select id="getProductList" parameterType="com.model2.mvc.common.Search" resultMap="productSelectMap">
SELECT *
  		FROM ( SELECT inner_table.* , ROWNUM AS row_seq
  						FROM ( SELECT p.*, t.tran_status_code
  										FROM product p, transaction t				
								  		<where>
								  			p.prod_no = t.prod_no(+)
								  			<if test="searchCondition!=null " >
								  				<if test="searchCondition==0  and searchKeyword !=''  and searchKeyword != null">
								  						AND p.prod_no	=	#{searchKeyword}
								  				</if> 
								  				<if test="searchCondition==1   and searchKeyword !=''  and searchKeyword != null ">
								  						AND p.prod_name like '%'|| #{searchKeyword}||'%'
								  				</if>  				
								  				<if test="searchCondition==2  and searchKeyword !=''  and searchKeyword != null">
								  						AND p.price = #{searchKeyword}
								  				</if>
								  			</if>
								  		</where> 												 
  										ORDER BY
  											<if test="sortBy == 'asc' ">p.price asc</if> 
  											<if test="sortBy == 'desc' ">p.price desc</if> 
  											<if test="sortBy != 'asc' and  sortBy != 'desc' ">p.prod_no</if> 									
  										 ) inner_table

					WHERE ROWNUM &lt;= #{endRowNum} )
		WHERE row_seq BETWEEN #{startRowNum} AND #{endRowNum} 
  	</select>
  <!-- 		/*sortBy 구현..*/
			if(search.getSortBy().equals("asc")){
				sql+= " order by p.price asc";
			}else if(search.getSortBy().equals("desc")){
				sql+= " order by p.price desc";
			}else{
				sql += " order by p.PROD_NO";
			} 
-->
  <!--  
    <select id="getProductList" parameterType="com.model2.mvc.common.Search" resultMap="productSelectMap">
  		SELECT  prod_no, prod_name, prod_detail, manufacture_day, price, image_file, reg_date
  		FROM product
			  		<if test="searchCondition!=null and searchKeyword !='' and searchKeyword !=null">
			  			<where>
			  				<if test="searchCondition==0 ">prod_no	=			#{searchKeyword}</if>  					
			  				<if test="searchCondition==1 ">prod_name like #{searchKeyword}</if>
			  				<if test="searchCondition==2 ">price =					#{searchKeyword} </if>  	
			  		</where> 			
			  		</if>
  			ORDER BY prod_no  
  	</select>
  -->
  	  		 	<!--  위 두번째 subQuery 의  
	 			WHERE ROWNUM &lt;= #{endRowNum} ) 는
	 			WHERE ROWNUM <= #{endRowNum} ) 의미이며..
	 			< 는 keyword 로 &lt; 를	사용.
	 			
	 			<![CDATA[  ~~~  ]]> 를 이용하여 아래와 같이 사용  할 수 있다.
	 			CDATA ==> Character Data 의 의미 Java 에서 \n 같은 특수문자 처리  

				WHERE ROWNUM <![CDATA[ <=]]> #{endRowNum} )
		-		-->
  	
  		<!-- SQL : SELECT ROW Count -->	 
	 <select  id="getTotalCount"  parameterType="com.model2.mvc.common.Search"	 resultType="int">
	  	SELECT COUNT(*)
	  	FROM(	SELECT prod_no, prod_name, prod_detail, manufacture_day, price, image_file, reg_date
						FROM product
				  		<if test="searchCondition!=null and searchKeyword !='' and searchKeyword !=null">
				  			<where>
				  				<if test="searchCondition==0 ">prod_no	=			#{searchKeyword}</if>  					
				  				<if test="searchCondition==1 ">prod_name like 	#{searchKeyword}</if>
				  				<if test="searchCondition==2 ">price =					#{searchKeyword} </if>  	
				  		</where> 			
				  		</if> ) countTable						
	 </select>
  	
</mapper>